@model EquipmentRental.Models.Equipment
@using System.Linq

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Equipment Details";

    bool isLoggedIn = (User != null && User.Identity != null && User.Identity.IsAuthenticated);

    bool canEditDelete =
        (
            (User != null && User.IsInRole("Admin"))
            || ((Session["UserID"] as int?) == Model.OwnerID)
        );

    var bookings = ViewBag.Bookings as IEnumerable<EquipmentRental.Models.Rental>;
}

<h2 class="mb-4">Equipment Details</h2>

<div class="card shadow mb-4">
    <div class="row g-0">
        <div class="col-md-4 text-center p-3">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="@Model.ImagePath" class="img-fluid rounded" alt="Equipment image"
                     style="max-height:300px; object-fit:cover;" />
            }
            else
            {
                <img src="~/Content/no-image.png" class="img-fluid rounded"
                     alt="No image placeholder"
                     style="max-height:300px; object-fit:cover;" />
            }
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h3 class="card-title">@Model.Name</h3>
                <p class="card-text mb-1"><strong>Category:</strong> @Model.Category</p>
                <p class="card-text mb-1"><strong>Daily Price:</strong> @Model.RentalPrice.ToString("C")</p>
                <p class="card-text mb-1"><strong>Status:</strong> @Model.AvailabilityStatus</p>
                <p class="card-text mb-1"><strong>Description:</strong> @Model.Description</p>
                <p class="card-text mb-1">
                    <strong>Owner:</strong>
                    @if (Model.Owner != null)
                    {
                        @Model.Owner.Name
                    }
                    else
                    {
                        @: (No Owner)
                    }
                </p>
                <p class="card-text">
                    <strong>Approved?</strong> @Model.IsApproved
                </p>

                @if (canEditDelete)
                {
                    <div class="mt-3">
                        @Html.ActionLink("Edit", "Edit", new { id = Model.ID },
                                              new { @class = "btn btn-sm btn-outline-secondary" })
                        @Html.ActionLink("Delete", "Delete", new { id = Model.ID },
                                              new { @class = "btn btn-sm btn-outline-danger ms-1" })
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (bookings != null && bookings.Any())
{
    <h4>Already‑booked dates</h4>
    <div class="table-responsive">
        <table class="table table-sm table-bordered" style="max-width:340px;">
            <thead class="table-light">
                <tr>
                    <th>Start</th>
                    <th>End</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var b in bookings.OrderBy(b => b.RentalStartDate))
                {
                    <tr>
                        <td>@b.RentalStartDate.ToShortDateString()</td>
                        <td>@b.RentalEndDate.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-muted">No approved bookings yet.</p>
}

@if (isLoggedIn && Model.IsApproved)
{
    <a class="btn btn-primary"
       href="@Url.Action("Create", "Rental", new { equipmentId = Model.ID })">
        Request this equipment
    </a>
}
else if (isLoggedIn && !Model.IsApproved)
{
    <div class="alert alert-warning mt-3">
        This equipment is not approved yet and cannot be rented.
    </div>
}

<p class="mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</p>
